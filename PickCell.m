function [U, Iter, R] = PickCell

% Author: Hannah Andrade Lucki
% University email: ha17181@bristol.ac.uk 
% Personal email: hannah.lucki@outlook.com
% May 2020; Last revision: 10-June-2020
% Developed in Matlab R2019b

fig = uifigure('Position',[60 678 270 150], 'Name','Cell Information');
 
%% Number of users
lblusers = uilabel(fig,...
    'Position',[10 120 150 15],... %[left bottom width height].
    'Text', 'Insert the number of users:');
User = uieditfield(fig, 'numeric',...
                      'Position',[160 120 30 15],...
                      'Limits', [1 Inf],...
                      'LowerLimitInclusive','off',...
                      'UpperLimitInclusive','on',...
                      'RoundFractionalValues','on', ...
                      'Value', 120, ...
                      'ValueChangedFcn', @(User, event) numberUsersChanged(User, lblusers));
                   
% Create ValueChangedFcn callback
function numberUsersChanged(User, lblusers)
U=User.Value;
end

%% Number of iterations
lbliter = uilabel(fig,...
    'Position',[10 90 180 15],... %[left bottom width height].
    'Text', 'Insert the number of iterations:');
Iterations = uieditfield(fig, 'numeric',...
                      'Position',[180 90 40 15],...
                      'Limits', [1 Inf],...
                      'LowerLimitInclusive','off',...
                      'UpperLimitInclusive','on',...
                      'RoundFractionalValues','on', ...
                      'Value', 300, ...
                      'ValueChangedFcn', @(Iterations, event) numberIterChanged(Iterations, lbliter));
                   
% Create ValueChangedFcn callback
function numberIterChanged(Iterations, lbliter)
Iter=Iterations.Value;
end

%% Radius size
lblradius = uilabel(fig,...
    'Position',[10 60 250 15],... %[left bottom width height].
    'Text', 'Insert the radius of the hexagon in km:');
Radius = uieditfield(fig, 'numeric',...
                      'Position',[220 60 35 15],...
                      'Limits', [10^-7 Inf],...
                      'LowerLimitInclusive','off',...
                      'UpperLimitInclusive','on',...
                      'RoundFractionalValues','off', ...
                      'Value', 3,...
                      'ValueChangedFcn', @(Radius, event) numberRadiusChanged(Radius, lblradius));         
                  
function numberRadiusChanged(Radius, lblradius)
    R=Radius.Value;
end

%% OK buton                          
btn = uibutton(fig,'Text','OK','Position',[100 25 100 20],...
    'ButtonPushedFcn', {@ButtonPushed, fig});
uiwait(fig);
if isgraphics(fig)
    U=User.Value;
    R=Radius.Value;
    Iter=Iterations.Value;
    delete(fig)
else
    N=NaN;
end

function ButtonPushed(btn, EventData, fig)
uiresume(fig);
end

end
